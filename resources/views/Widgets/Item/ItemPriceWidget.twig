{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set customClass = widget.settings.customClass.mobile %}
{% set spacingSettings = widget.settings.spacing %}
{% set inlineSpacings = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{% set spacingClasses = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{% set appearance = widget.settings.appearance.mobile | default("none") %}
{% set showCrossPrice = widget.settings.showCrossPrice.mobile %}

{% set priceTranslation = trans("Ceres::Template.dynamicVariationPrice", {price: "'+$options.filters.currency($store.getters.variationTotalPrice, $store.getters.currentItemVariation.prices.default.currency)+'"}) %}

<div class="widget widget-item-price widget-{{ appearance }}
    {% if customClass | length > 0 %} {{ customClass }}{% endif %}
    {% if spacingClasses | length > 0 %} {{ spacingClasses }}{% endif %}"
    {% if showCrossPrice %}
        :class="{ 'has-crossprice': $store.getters.currentItemVariation.prices.rrp && $store.getters.currentItemVariation.prices.rrp.unitPrice.value > 0 && $store.getters.currentItemVariation.prices.rrp.unitPrice.value > $store.getters.currentItemVariation.prices.default.unitPrice.value }"
    {% endif %}
    {% if inlineSpacings | length > 0 %} style="{{ inlineSpacings }}"{% endif %}>

    <item-price></item-price>
</div>
