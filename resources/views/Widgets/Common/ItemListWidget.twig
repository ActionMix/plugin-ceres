{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}

{% set showHeadline = widget.settings.showHeadline.mobile  %}
{% set headline     = widget.settings.headline.mobile  %}
{% set listType     = widget.settings.listType.mobile %}
{% set itemSort     = widget.settings.itemSort.mobile %}
{% set maxItems     = widget.settings.maxItems.mobile %}
{% set categoryId   = widget.settings.categoryId.mobile %}
{% set itemListId   = widget.settings.tagId.mobile %}

{% if listType == "category" %}
    {% set itemListId = categoryId %}
    {{ Twig.set("category", Twig.call("services.category.get", [categoryId])) }}
    {{ Twig.set("categoryUrl", Twig.call("services.category.getURL", ["$category"])) }}
{% endif %}

{% set requestedListType = listType %}
{% if listType == "last_seen" and isPreview %}
    {# request random items when rendering preview of last seen items. #}
    {% set requestedListType = "random" %}
{% endif %}

{% if listType != "last_seen" or not isPreview %}
    {# do not get item list for last seen items. Items will be loaded asynchronusly by vue component. #}
    {{ Twig.set("itemList", Twig.call("services.itemList.getItemList", [requestedListType, itemListId, itemSort, maxItems]) ) }}
{% endif %}

{{ Twig.set("title", trans("Ceres::Widget.itemListPlaceholderListHeader") | json_encode ) }}
{% if showHeadline == "default-caption" %}
    {% if listType == "category" %}
        {{ Twig.set("title", "category.details[0].name") }}
    {% elseif listType == "last_seen" %}
        {{ Twig.set("title", "trans('Ceres::Template.itemListLastSeen')" ) }}
    {% elseif listType == "tag_list" and itemListId is not empty %}
        {{ Twig.set("title", Twig.call("services.tag.getTagName", [itemListId])) }}
    {% else %}
        {{ Twig.set("title", trans("Ceres::Widget.itemListPlaceholderListHeader") | json_encode ) }}
    {% endif %}
{% elseif showHeadline == "custom-caption" and headline | trim is not empty %}
    {{ Twig.set("title", headline | json_encode ) }}
{% endif %}

<div class="widget widget-item-list widget-{{ widget.settings.appearance.mobile | default('primary') }}">
    <div>showHeadline: {{ showHeadline }}</div>
    <div>Title: {{ Twig.print("title") }}</div>
    <div class="widget-inner">
        {% if listType == "last_seen" and not isPreview %}
            {# render vue component for last seen items #}
            <last-seen-item-list>
                {% if showHeadline == "default-caption" %}
                    <div class="widget-caption m-b-1" slot="heading">
                        <h2>{{ Twig.trans("Ceres::Template.itemListLastSeen") }}</h2>
                    </div>
                {% elseif showHeadline == "custom-caption" and headline | trim is not empty %}
                    <div class="widget-caption m-b-1" slot="heading">
                        <h2>{{ headline }}</h2>
                    </div>
                {% endif %}
            </last-seen-item-list>
        {% else %}
            {# render static item lists #}
            {% if showHeadline == "default-caption" or showHeadline == "custom-caption" %}
                <div class="widget-caption m-b-1">
                    <h2>{{ Twig.print("title") }}</h2>

                    {{ Twig.if("category") }}
                        <a href="{{ Twig.print(Twig.call("services.category.getURL", [Twig.var("category")])) }}">
                            <i class="fa fa-angle-double-right" aria-hidden="true"></i> {{ Twig.trans("Ceres::Template.homepageShowAll") }}
                        </a>
                    {{ Twig.endif() }}
                </div>
            {% endif %}

            <div class="row clearfix">
                {{ Twig.if("itemList.documents is not empty") }}
                    <container-item-list :items="{{ Twig.print("itemList.documents | json_encode") }}"></container-item-list>
                {{ Twig.endif() }}
            </div>
        {% endif %}
    </div>
</div>