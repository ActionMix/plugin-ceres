{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./resources/js/src/app/components/customer/ChangeEmailForm.vue?22a5","webpack:///./resources/js/src/app/components/customer/ChangeEmailForm.vue?1532","webpack:///resources/js/src/app/components/customer/ChangeEmailForm.vue","webpack:///./resources/js/src/app/components/customer/ChangeEmailForm.vue"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","_vm","_h","$createElement","_c","_self","staticClass","attrs","method","on","submit","$event","preventDefault","for","_uid","_v","_s","$translate","type","name","id","disabled","domProps","value","newMail","directives","rawName","password","expression","autocomplete","input","target","composing","isDisabled","_withStripped","component","__file"],"mappings":"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","file":"ceres-27.min.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    {\n      staticClass: \"clearfix\",\n      attrs: { method: \"post\" },\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.submit()\n        }\n      }\n    },\n    [\n      _c(\"div\", { staticClass: \"input-unit mt-3\" }, [\n        _c(\n          \"label\",\n          { staticClass: \"disabled\", attrs: { for: \"new-mail\" + _vm._uid } },\n          [_vm._v(_vm._s(_vm.$translate(\"Ceres::Template.myAccountNewEmail\")))]\n        ),\n        _vm._v(\" \"),\n        _c(\"input\", {\n          staticClass: \"form-control\",\n          attrs: {\n            type: \"email\",\n            name: \"email\",\n            id: \"new-mail\" + _vm._uid,\n            disabled: \"\"\n          },\n          domProps: { value: _vm.newMail }\n        })\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"input-unit\" }, [\n        _c(\"label\", { attrs: { for: \"password\" + _vm._uid } }, [\n          _vm._v(_vm._s(_vm.$translate(\"Ceres::Template.loginPassword\")))\n        ]),\n        _vm._v(\" \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.password,\n              expression: \"password\"\n            }\n          ],\n          staticClass: \"form-control\",\n          attrs: {\n            type: \"password\",\n            name: \"password\",\n            autocomplete: \"current-password\",\n            id: \"password\" + _vm._uid\n          },\n          domProps: { value: _vm.password },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.password = $event.target.value\n            }\n          }\n        })\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass:\n            \"btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width\",\n          attrs: { type: \"submit\", disabled: _vm.isDisabled }\n        },\n        [\n          _c(\"span\", [\n            _vm._v(\n              _vm._s(_vm.$translate(\"Ceres::Template.myAccountChangeEmail\"))\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"i\", {\n            directives: [\n              {\n                name: \"waiting-animation\",\n                rawName: \"v-waiting-animation\",\n                value: _vm.isDisabled,\n                expression: \"isDisabled\"\n              }\n            ],\n            staticClass: \"fa fa-envelope\",\n            attrs: { \"aria-hidden\": \"true\" }\n          })\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangeEmailForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangeEmailForm.vue?vue&type=script&lang=js&\"","<template>\n    <form method=\"post\" @submit.prevent=\"submit()\" class=\"clearfix\">\n        <div class=\"input-unit mt-3\">\n            <label :for=\"'new-mail' + _uid\" class=\"disabled\">{{ $translate(\"Ceres::Template.myAccountNewEmail\") }}</label>\n            <input type=\"email\" name=\"email\" class=\"form-control\" :id=\"'new-mail' + _uid\" :value=\"newMail\" disabled>\n        </div>\n\n        <div class=\"input-unit\">\n            <label :for=\"'password' + _uid\">{{ $translate(\"Ceres::Template.loginPassword\") }}</label>\n            <input type=\"password\" name=\"password\" autocomplete=\"current-password\" class=\"form-control\" :id=\"'password' + _uid\" v-model=\"password\">\n        </div>\n\n        <button type=\"submit\" :disabled=\"isDisabled\" class=\"btn btn-primary btn-appearance float-right btn-medium btn-xs-max-width\">\n            <span>{{ $translate(\"Ceres::Template.myAccountChangeEmail\") }}</span>\n            <i class=\"fa fa-envelope\" v-waiting-animation=\"isDisabled\" aria-hidden=\"true\"></i>\n        </button>\n    </form>\n</template>\n\n<script>\nimport NotificationService from \"../../services/NotificationService\";\nimport ApiService from \"../../services/ApiService\";\n\nexport default {\n\n    props: {\n        contactId:\n        {\n            type: Number,\n            required: true\n        },\n        hash:\n        {\n            type: String,\n            required: true\n        },\n        newMail:\n        {\n            type: String,\n            required: true\n        }\n    },\n    data()\n    {\n        return {\n            password: \"\",\n            isDisabled: false\n        };\n    },\n\n    methods: {\n        /**\n         * Send the login data\n         */\n        submit()\n        {\n            this.isDisabled = true;\n\n            ApiService.put(\"/rest/io/customer/mail/\" + this.contactId, { password: this.password, hash: this.hash })\n                .done(response =>\n                {\n                    NotificationService.success(\n                        this.$translate(\"Ceres::Template.myAccountChangeEmailSuccessful\")\n                    );\n                    window.location.assign(window.location.origin);\n                })\n                .fail(() =>\n                {\n                    NotificationService.error(\n                        this.$translate(\"Ceres::Template.myAccountChangeEmailFailed\")\n                    ).closeAfter(10000);\n                })\n                .always(() =>\n                {\n                    this.isDisabled = false;\n                });\n        }\n    }\n}\n</script>","import { render, staticRenderFns } from \"./ChangeEmailForm.vue?vue&type=template&id=0bc3dede&\"\nimport script from \"./ChangeEmailForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ChangeEmailForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0bc3dede')) {\n      api.createRecord('0bc3dede', component.options)\n    } else {\n      api.reload('0bc3dede', component.options)\n    }\n    module.hot.accept(\"./ChangeEmailForm.vue?vue&type=template&id=0bc3dede&\", function () {\n      api.rerender('0bc3dede', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/customer/ChangeEmailForm.vue\"\nexport default component.exports"],"sourceRoot":""}