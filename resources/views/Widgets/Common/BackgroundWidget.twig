{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set opacity = (widget.settings.opacity.mobile | default(1)) / 100 %}
{% set fullWidth = widget.settings.fullWidth.mobile is same as (true) %}
{% set heightClass  = WidgetHelper.getHeightClass(widget.settings) %}
{% set inlineHeight = WidgetHelper.getInlineHeight(widget.settings) %}

{% set customClass     = widget.settings.customClass.mobile %}
{% set spacingSettings = widget.settings.spacing %}
{% set inlinePadding   = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set inlineMargin    = WidgetHelper.getInlineSpacings(spacingSettings, "", spacingSettings.customMargin.mobile) %}
{% set spacingPadding  = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set spacingMargin   = WidgetHelper.getSpacingClasses(spacingSettings, "",spacingSettings.customMargin.mobile) %}

{% set heightClass  = WidgetHelper.getHeightClass(widget.settings) %}
{% set inlineHeight = WidgetHelper.getInlineHeight(widget.settings) %}

{% set opacity = (widget.settings.opacity.mobile | default(1)) / 100 %}
{% set sourceType = widget.settings.sourceType.mobile %}
{% set customImageValue = widget.settings.customImagePath.value.mobile %}
{% set customImageType = widget.settings.customImagePath.type.mobile %}
{% set colorPalette = widget.settings.colorPalette.mobile %}

{{ Twig.set("url", "" | json_encode) }}
    
{% if sourceType == "category-image1" %}
    {{ Twig.set("url", "category.details[0].imagePath") }}
    {{ Twig.set("url", "'/documents/' ~ url") }}

{% elseif sourceType == "category-image2" %}
    {{ Twig.set("url", "category.details[0].image2Path") }}
    {{ Twig.set("url", "'/documents/' ~ url") }}

{% elseif sourceType == "custom-image" %}
    {{ Twig.set("url", customImageValue | json_encode) }}

    {% if customImageType == "category" %}
        {{ Twig.set("category", Twig.call("services.category.get", [customImageValue])) }}
        {{ Twig.set("url", "category.details[0].imagePath") }}
        {{ Twig.set("url", "'/documents/' ~ url") }}

    {% elseif customImageType == "item" %}
        {{ Twig.set("itemData", Twig.call("services.item.getVariation", [customImageValue | int])) }}
        {{ Twig.set("itemData", "itemData.documents[0].data") }}
        {{ Twig.set("itemImage", "itemData.images | itemImages | orderByKey('position') | first") }}
        {{ Twig.set("url", "itemImage.url") }}

    {% endif %}

{% endif %}

{#
<div class="border rounded border-danger mb-1">
    {% if sourceType == "color" %}
        <div class="bg-{{ colorPalette | default("primary") }} border rounded" style="height: 40px;"></div>

    {% else %}
        <img height="40" src="{{ Twig.print("url") }}" alt="">

    {% endif %}
</div>
#}

<div class="widget widget-background d-flex parallax-img-container{% if customClass | length > 0 %} {{ customClass }}{% endif %}{% if fullWidth %} widget-fw{% endif %}
    {% if spacingMargin | length > 0 %} {{ spacingMargin }}{% endif %}" style="min-height:23vw;"
    {% if inlineMargin | length > 0 %} style="{{ inlineMargin }}"{% endif %}>
    <div>
        <div class="parallax-img-container-inner{% if stylingClasses | length > 0 %} {{ stylingClasses }}{% endif %}"
            style="background-image: url(http://master.plentymarkets.com/documents/category/16/2000x1000.jpg);{% if opacity < 1 %}opacity:{{ opacity }};{% endif %}">
        </div>
    </div>
    <div class="container-max d-flex">
        <div class="w-100{% if spacingPadding | length > 0 %} {{ spacingPadding }}{% endif %}"{% if inlinePadding | length > 0 %} style="{{ inlinePadding }}"{% endif %}
            {% if isPreview %} data-builder-child-container="background"{% endif %}>
            {{ children.background | raw }}
        </div>
    </div>
</div>
