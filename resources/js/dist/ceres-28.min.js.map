{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./resources/js/src/app/components/customer/ReCaptcha.vue?a776","webpack:///resources/js/src/app/components/customer/ReCaptcha.vue","webpack:///./resources/js/src/app/components/customer/ReCaptcha.vue?8285","webpack:///./resources/js/src/app/components/customer/ReCaptcha.vue"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","_h","$createElement","_self","_c","attrs","_withStripped","component","__file"],"mappings":"2FAMe,SAASA,EACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBIC,EArBAC,EAAmC,mBAAlBT,EACjBA,EAAcS,QACdT,EAiDJ,GA9CIC,IACFQ,EAAQR,OAASA,EACjBQ,EAAQP,gBAAkBA,EAC1BO,EAAQC,WAAY,GAIlBP,IACFM,EAAQE,YAAa,GAInBN,IACFI,EAAQG,SAAW,UAAYP,GAI7BC,GACFE,EAAO,SAAUK,IAEfA,EACEA,GACCC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAEZ,oBAAxBE,sBACrBL,EAAUK,qBAGRd,GACFA,EAAae,KAAKL,KAAMD,GAGtBA,GAAWA,EAAQO,uBACrBP,EAAQO,sBAAsBC,IAAIf,IAKtCG,EAAQa,aAAed,GACdJ,IACTI,EAAOD,EACH,WAAcH,EAAae,KAAKL,KAAMA,KAAKS,MAAMC,SAASC,aAC1DrB,GAGFI,EACF,GAAIC,EAAQE,WAAY,CAGtBF,EAAQiB,cAAgBlB,EAExB,IAAImB,EAAiBlB,EAAQR,OAC7BQ,EAAQR,OAAS,SAAmC2B,EAAGf,GAErD,OADAL,EAAKW,KAAKN,GACHc,EAAeC,EAAGf,QAEtB,CAEL,IAAIgB,EAAWpB,EAAQqB,aACvBrB,EAAQqB,aAAeD,EACnB,GAAGE,OAAOF,EAAUrB,GACpB,CAACA,GAIT,MAAO,CACLwB,QAAShC,EACTS,QAASA,GA1Fb,mC,wCCAA,IAAIR,EAAS,WACX,IACIgC,EADMnB,KACGoB,eAEb,OAHUpB,KAEGqB,MAAMC,IAAMH,GACf,MAAO,CAAEI,MAAO,CAAE,iBAAkB,OAGhDpC,EAAOqC,eAAgB,E,eCFvB,ECLiN,EDOjN,CAEE,KAAF,YAEE,KAJF,WAMI,MAAJ,CACM,QAAN,yCACM,OAAN,0CAIE,QAZF,WAaI,IAAJ,OACI,KAAJ,sBAEM,EAAN,gCAAQ,OAAR,wBAIE,QACF,CACI,aADJ,WAEM,IAAN,OACM,OAAN,aAKA,IAEQ,EAAR,2BAEU,IACV,EADA,mCAKY,EAFZ,cAEA,mEAIA,0CAGU,EAAV,uBACU,EAAV,0BACU,EAAV,MAEU,EAAV,oCAAY,OAAZ,WACU,EAAV,qCAAY,OAAZ,WAEU,SAAV,wBAIA,GA9BA,mBAiCI,aAtCJ,WAuCM,IAAN,OACA,mBAEQ,OAAR,6BAEA,gBAEY,EAAZ,+CACA,MACA,CACc,QAAd,SACc,KAAd,YACc,MAAd,cACc,SAAd,mCAQI,kBA5DJ,SA4DA,GAEM,KAAN,mDACA,cACA,sCAAQ,SAAR,Q,SErFIC,EAAY,YACd,EACAtC,EHHoB,IGKpB,EACA,KACA,KACA,MAuBFsC,EAAU9B,QAAQ+B,OAAS,yDACZ,UAAAD,E","file":"ceres-28.min.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { \"data-recaptcha\": \"\" } })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div data-recaptcha></div>\n</template>\n\n<script>\nlet gRecaptchaApiLoaded;\n\nexport default {\n\n    name: \"recaptcha\",\n\n    data()\n    {\n        return {\n            version: App.config.global.googleRecaptchaVersion,\n            apiKey: App.config.global.googleRecaptchaApiKey\n        };\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.createScript().then(() => this.initializeV3());\n        });\n    },\n\n    methods:\n    {\n        createScript()\n        {\n            if (!this.apiKey)\n            {\n                return Promise.resolve();\n            }\n\n            if (!gRecaptchaApiLoaded)\n            {\n                gRecaptchaApiLoaded = new Promise((resolve, reject) =>\n                {\n                    const script = document.createElement(\"script\");\n                    let scriptSource;\n\n                    if (this.version === 3)\n                    {\n                        scriptSource = `https://www.google.com/recaptcha/api.js?render=${this.apiKey}`;\n                    }\n                    else\n                    {\n                        scriptSource = \"https://www.google.com/recaptcha/api.js\";\n                    }\n\n                    script.type = \"text/javascript\";\n                    script.id = \"google-recaptcha-api\";\n                    script.src = scriptSource;\n\n                    script.addEventListener(\"load\", () => resolve(script), false);\n                    script.addEventListener(\"error\", () => reject(script), false);\n\n                    document.body.appendChild(script);\n                });\n            }\n\n            return gRecaptchaApiLoaded;\n        },\n\n        initializeV3()\n        {\n            if (window.grecaptcha)\n            {\n                window.grecaptcha.ready(() =>\n                {\n                    if (this.version !== 3)\n                    {\n                        this.$el.dataset.recaptcha = window.grecaptcha.render(\n                            this.$el,\n                            {\n                                sitekey: this.apiKey,\n                                size: \"invisible\",\n                                badge: \"bottomright\",\n                                callback: this.recaptchaCallback.bind(this)\n                            }\n                        );\n                    }\n                });\n            }\n        },\n\n        recaptchaCallback(response)\n        {\n            this.$el.querySelector(\"[name=\\\"g-recaptcha-response\\\"]\")\n                .dispatchEvent(\n                    new CustomEvent(\"recaptcha-response\", { response: response })\n                );\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReCaptcha.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReCaptcha.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReCaptcha.vue?vue&type=template&id=4424f830&\"\nimport script from \"./ReCaptcha.vue?vue&type=script&lang=js&\"\nexport * from \"./ReCaptcha.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4424f830')) {\n      api.createRecord('4424f830', component.options)\n    } else {\n      api.reload('4424f830', component.options)\n    }\n    module.hot.accept(\"./ReCaptcha.vue?vue&type=template&id=4424f830&\", function () {\n      api.rerender('4424f830', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/customer/ReCaptcha.vue\"\nexport default component.exports"],"sourceRoot":""}