{"version":3,"sources":["webpack:///./resources/js/src/app/components/customer/ReCaptcha.vue?a776","webpack:///resources/js/src/app/components/customer/ReCaptcha.vue","webpack:///./resources/js/src/app/components/customer/ReCaptcha.vue?8285","webpack:///./resources/js/src/app/components/customer/ReCaptcha.vue"],"names":["render","_h","this","$createElement","_self","_c","attrs","_withStripped","component","options","__file"],"mappings":"kGAAA,IAAIA,EAAS,WACX,IACIC,EADMC,KACGC,eAEb,OAHUD,KAEGE,MAAMC,IAAMJ,GACf,MAAO,CAAEK,MAAO,CAAE,iBAAkB,OAGhDN,EAAOO,eAAgB,E,eCFvB,ECLiN,EDOjN,CAEE,KAAF,YAEE,KAJF,WAMI,MAAJ,CACM,QAAN,yCACM,OAAN,0CAIE,QAZF,WAaI,IAAJ,OACI,KAAJ,sBAEM,EAAN,gCAAQ,OAAR,wBAIE,QACF,CACI,aADJ,WAEM,IAAN,OACM,OAAN,aAKA,IAEQ,EAAR,2BAEU,IACV,EADA,mCAKY,EAFZ,cAEA,mEAIA,0CAGU,EAAV,uBACU,EAAV,0BACU,EAAV,MAEU,EAAV,oCAAY,OAAZ,WACU,EAAV,qCAAY,OAAZ,WAEU,SAAV,wBAIA,GA9BA,mBAiCI,aAtCJ,WAuCM,IAAN,OACA,mBAEQ,OAAR,6BAEA,gBAEY,EAAZ,+CACA,MACA,CACc,QAAd,SACc,KAAd,YACc,MAAd,cACc,SAAd,mCAQI,kBA5DJ,SA4DA,GAEM,KAAN,mDACA,cACA,sCAAQ,SAAR,Q,QErFIC,EAAY,YACd,EACAR,EHHoB,IGKpB,EACA,KACA,KACA,MAuBFQ,EAAUC,QAAQC,OAAS,yDACZ,UAAAF,E","file":"ceres-28.min.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { \"data-recaptcha\": \"\" } })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div data-recaptcha></div>\n</template>\n\n<script>\nlet gRecaptchaApiLoaded;\n\nexport default {\n\n    name: \"recaptcha\",\n\n    data()\n    {\n        return {\n            version: App.config.global.googleRecaptchaVersion,\n            apiKey: App.config.global.googleRecaptchaApiKey\n        };\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.createScript().then(() => this.initializeV3());\n        });\n    },\n\n    methods:\n    {\n        createScript()\n        {\n            if (!this.apiKey)\n            {\n                return Promise.resolve();\n            }\n\n            if (!gRecaptchaApiLoaded)\n            {\n                gRecaptchaApiLoaded = new Promise((resolve, reject) =>\n                {\n                    const script = document.createElement(\"script\");\n                    let scriptSource;\n\n                    if (this.version === 3)\n                    {\n                        scriptSource = `https://www.google.com/recaptcha/api.js?render=${this.apiKey}`;\n                    }\n                    else\n                    {\n                        scriptSource = \"https://www.google.com/recaptcha/api.js\";\n                    }\n\n                    script.type = \"text/javascript\";\n                    script.id = \"google-recaptcha-api\";\n                    script.src = scriptSource;\n\n                    script.addEventListener(\"load\", () => resolve(script), false);\n                    script.addEventListener(\"error\", () => reject(script), false);\n\n                    document.body.appendChild(script);\n                });\n            }\n\n            return gRecaptchaApiLoaded;\n        },\n\n        initializeV3()\n        {\n            if (window.grecaptcha)\n            {\n                window.grecaptcha.ready(() =>\n                {\n                    if (this.version !== 3)\n                    {\n                        this.$el.dataset.recaptcha = window.grecaptcha.render(\n                            this.$el,\n                            {\n                                sitekey: this.apiKey,\n                                size: \"invisible\",\n                                badge: \"bottomright\",\n                                callback: this.recaptchaCallback.bind(this)\n                            }\n                        );\n                    }\n                });\n            }\n        },\n\n        recaptchaCallback(response)\n        {\n            this.$el.querySelector(\"[name=\\\"g-recaptcha-response\\\"]\")\n                .dispatchEvent(\n                    new CustomEvent(\"recaptcha-response\", { response: response })\n                );\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReCaptcha.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReCaptcha.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReCaptcha.vue?vue&type=template&id=4424f830&\"\nimport script from \"./ReCaptcha.vue?vue&type=script&lang=js&\"\nexport * from \"./ReCaptcha.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4424f830')) {\n      api.createRecord('4424f830', component.options)\n    } else {\n      api.reload('4424f830', component.options)\n    }\n    module.hot.accept(\"./ReCaptcha.vue?vue&type=template&id=4424f830&\", function () {\n      api.rerender('4424f830', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/customer/ReCaptcha.vue\"\nexport default component.exports"],"sourceRoot":""}