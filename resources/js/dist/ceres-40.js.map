{"version":3,"sources":["webpack:///resources/js/src/app/components/pageDesign/Notifications.vue","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?ca6e","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?b8a1","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?ca27"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AAEA;AAEA;AACA;AADA,GAFA;AAMA,MANA,kBAOA;AACA;AACA;AADA;AAGA,GAXA;AAaA;AACA,iBADA,2BAEA;AACA;AAEA;AACA,KANA;AAQA,yBARA,mCASA;AACA;AAAA;AAAA;AACA;AAXA,GAbA;AA2BA,SA3BA,qBA4BA;AAAA;;AACA,+BACA;AACA,mFACA,yBACA;AACA;AACA,OAJA;;AAMA;AACA,KATA;AAUA,GAvCA;AAyCA;AACA;;;;AAIA,WALA,mBAKA,YALA,EAMA;AACA;AACA,KARA;;AAUA;;;AAGA,4BAbA,sCAcA;AACA,kDACA;AACA;;AAEA,mGACA;AACA;AACA,SANA,CAQA;;;AACA,wQACA;AACA;AACA,SAHA,MAKA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAzCA,G;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sCAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sBAAsB,wCAAwC;AAC9D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yBAAyB,SAAS,wBAAwB,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY,0CAA0C,EAAE;AAC7E;AACA;AACA,4BAA4B,mCAAmC;AAC/D;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnDA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAA4F;AAC3B;AACL;;;AAG5D;AACsG;AACtG,gBAAgB,2GAAU;AAC1B,EAAE,mFAAM;AACR,EAAE,wFAAM;AACR,EAAE,iGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAqM,CAAgB,iPAAG,EAAC,C;;;;;;;;;;;;ACAzN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"ceres-40.js","sourcesContent":["<template>\n    <div class=\"notification-wrapper\">\n        <div v-for=\"notification in filteredNotifications\"\n            :key=\"notification.id\"\n            :class=\"'alert alert-dismissible fade in show alert-' + notification.context\"\n            role=\"alert\"\n        >\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"notification.close()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n\n            <strong v-if=\"showErrorCode\">{{ notification.code }}</strong>\n\n            <div v-html=\"notification.message\"></div>\n\n            <p class=\"small\" v-for=\"(trace, index) in notification.stackTrace\" :key=\"index\">\n                {{ trace.message }}\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport NotificationService from \"../../services/NotificationService\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\nimport Vue from \"vue\";\n\nexport default {\n\n    props: {\n        initialNotifications: Object\n    },\n\n    data()\n    {\n        return {\n            notifications: []\n        };\n    },\n\n    computed: {\n        showErrorCode()\n        {\n            const logData = this.$ceres.config.log.data;\n\n            return logData.includes(\"show_error_code\") || logData.includes(\"all\");\n        },\n\n        filteredNotifications()\n        {\n            return this.notifications.filter(notification => !!notification.message);\n        }\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            NotificationService.listen(\n                notifications =>\n                {\n                    Vue.set(this, \"notifications\", notifications);\n                });\n\n            this.showInitialNotifications();\n        });\n    },\n\n    methods : {\n        /**\n         * Dissmiss the notification\n         * @param notification\n         */\n        dismiss(notification)\n        {\n            NotificationService.getNotifications().remove(notification);\n        },\n\n        /**\n         * show initial notifications from server\n         */\n        showInitialNotifications()\n        {\n            for (const type in this.initialNotifications)\n            {\n                const notification = this.initialNotifications[type];\n\n                if (isNullOrUndefined(notification))\n                {\n                    continue;\n                }\n\n                // type cannot be undefined\n                if (!isNullOrUndefined(NotificationService[type]) && typeof NotificationService[type] === \"function\")\n                {\n                    NotificationService[type](notification);\n                }\n                else\n                {\n                    // unkown type\n                    NotificationService.log(notification);\n                }\n            }\n        }\n    }\n}\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"notification-wrapper\" },\n    _vm._l(_vm.filteredNotifications, function(notification) {\n      return _c(\n        \"div\",\n        {\n          key: notification.id,\n          class:\n            \"alert alert-dismissible fade in show alert-\" +\n            notification.context,\n          attrs: { role: \"alert\" }\n        },\n        [\n          _c(\n            \"button\",\n            {\n              staticClass: \"close\",\n              attrs: { type: \"button\", \"aria-label\": \"Close\" },\n              on: {\n                click: function($event) {\n                  return notification.close()\n                }\n              }\n            },\n            [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"Ã—\")])]\n          ),\n          _vm._v(\" \"),\n          _vm.showErrorCode\n            ? _c(\"strong\", [_vm._v(_vm._s(notification.code))])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { domProps: { innerHTML: _vm._s(notification.message) } }),\n          _vm._v(\" \"),\n          _vm._l(notification.stackTrace, function(trace, index) {\n            return _c(\"p\", { key: index, staticClass: \"small\" }, [\n              _vm._v(\"\\n            \" + _vm._s(trace.message) + \"\\n        \")\n            ])\n          })\n        ],\n        2\n      )\n    }),\n    0\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./Notifications.vue?vue&type=template&id=e0b367d0&\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js&\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e0b367d0')) {\n      api.createRecord('e0b367d0', component.options)\n    } else {\n      api.reload('e0b367d0', component.options)\n    }\n    module.hot.accept(\"./Notifications.vue?vue&type=template&id=e0b367d0&\", function () {\n      api.rerender('e0b367d0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/pageDesign/Notifications.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=template&id=e0b367d0&\""],"sourceRoot":""}