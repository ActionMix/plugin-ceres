<script type="x/template" id="vue-order-property-list-item">
    <div>

        <div v-if="inputType === 'text' || inputType === 'float' || inputType === 'int'" class="input-unit order-property-input" :class="{ 'active': property.value, 'error': hasError }" data-validate="text">
            <input type="text" @input="onInputValueChanged($event.target.value)" v-model="inputValue" v-tooltip data-toggle="tooltip" :title="property.names.description">
            <label>${property.names.name}
                <strong v-if="surcharge > 0">(+ ${ surcharge | currency})</strong>
            *</label>
        </div>

        <div v-else-if="inputType === 'checkbox' || inputType === 'radio'" class="form-check">
            <input :name="group ? group.id : 'check' + _uid"
                   :id="'check' + _uid"
                   :value="property.id"
                   v-model="property.value"
                   @change="onInputValueChanged(inputType === 'checkbox' ? $event.target.checked : $event.target.value)"
                   class="form-check-input"
                   :type="inputType">

            <label class="form-check-label"
                   :for="'check' + _uid"
                   :class="{ 'text-success': property.value, 'text-danger': hasError }"
                   v-tooltip data-toggle="tooltip"
                   :title="property.names.description">
                ${ property.names.name }
                <strong v-if="surcharge > 0">(+ ${ surcharge | currency}) *</strong>
            </label>
        </div>

        <div v-else-if="inputType === 'selection'">
            <div
                class="input-unit order-property-input"
                :class="{ 'active': property.value, 'error': hasError }"
                v-tooltip
                data-toggle="tooltip"
                :title="property.names.description">
                <select v-model="selectionValue" @change="onInputValueChanged($event.target.value)" class="custom-select">
                    <option :selected="true" :value="null">{{ trans("Ceres::Template.singleItemPleaseSelect") }}</option>
                    <option :selected="property.id === id" :value="id" v-for="(value, id) in property.selectionValues">${ value.name }</option>
                </select>
                <label>
                    ${property.names.name}
                    <strong v-if="surcharge > 0">(+ ${ surcharge | currency})</strong>
                    *
                </label>
            </div>
            <popper class="order-property-selection-info-popper" v-cloak v-if="selectedDescription" placement="bottom">
                <button slot="handle" class="btn btn-description">
                    <i class="fa fa-circle fa-stack-2x icon-background"></i>
                    <i class="fa fa-info fa-stack-1x"></i>
                </button>
                <ul slot="content" class='pl-3'>
                    ${ selectedDescription }
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Eum reiciendis sint eos autem suscipit fuga saepe cupiditate libero veritatis, debitis non corporis odit doloribus ad nam, ratione rerum temporibus molestiae!Earum delectus facere possimus consectetur laudantium, magnam autem accusantium eum ullam quidem veniam, quisquam unde. Adipisci suscipit consequuntur ea magnam, error recusandae quasi sunt quia magni voluptates inventore illo quos.
                </ul>
            </popper>
        </div>

        <div v-else-if="inputType === 'file'">
            <label class="input-unit file-input order-property-input component-loading with-icon sending" :class="{ 'active': property.value, 'isLoading': waiting, 'error': hasError }" v-tooltip data-toggle="tooltip" :title="property.names.description">
                <span class="input-unit-preview" :class="{ 'disabled': waiting }">${selectedFileName}</span>
                <span class="input-unit-label">
                    ${property.names.name}
                    <strong v-if="surcharge > 0">(+ ${ surcharge | currency}) *</strong>
                </span>
                <span class="input-unit-btn" v-if="!selectedFile">
                    <i class="fa fa-ellipsis-h"></i>
                </span>
                <span class="input-unit-btn" v-else :disabled="waiting" @click.prevent="clearSelectedFile()">
                    <i class="fa fa-times"></i>
                </span>
                <input :disabled="waiting" ref="fileInput" type="file" size="50" accept="image/*" @change="setPropertyFile($event)">
            </label>
        </div>

    </div>
</script>
