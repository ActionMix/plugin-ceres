{"version":3,"sources":["webpack:///resources/js/src/app/components/itemList/ItemSearch.vue","webpack:///./resources/js/src/app/components/itemList/ItemSearch.vue?a7b8","webpack:///./resources/js/src/app/components/itemList/ItemSearch.vue","webpack:///./resources/js/src/app/components/itemList/ItemSearch.vue?919e","webpack:///./resources/js/src/app/components/itemList/ItemSearch.vue?0c22"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AAEA;AAEA,qBAFA;AAIA;AACA,oBACA;AACA,mBADA;AAEA;AAFA,KAFA;AAMA,yBACA;AACA,mBADA;AAEA;AAFA;AAPA,GAJA;AAiBA,MAjBA,kBAkBA;AACA;AACA,+BADA;AAEA,4BAFA;AAGA,mCAHA;AAIA;AAJA;AAMA,GAzBA;AA2BA,YACA;AACA,4BADA,sCAEA;AACA;;AAEA,2EACA;AACA;AACA;;AAEA;AACA,KAXA;AAaA,iBAbA,2BAcA;AACA;AACA;AAhBA,GA5BA;AA+CA,SA/CA,qBAgDA;AAAA;;AACA,+BACA;AACA;;AAEA;;AAEA;AACA,KAPA;AAQA,GAzDA;AA2DA,WACA;AACA,iBADA,2BAEA;AACA,yCACA;AACA,sCACA;AACA;AACA,SAHA,MAKA;AACA;AACA;AAEA;AACA;AACA,OAbA,MAeA;AACA;AACA;;AAEA;AACA,KAvBA;AAyBA,UAzBA,oBA0BA;AACA,+CACA;AACA,kGACA;AACA;AACA;AAEA;AACA;AACA,SAPA,MASA;AACA;AACA;AACA,OAdA,MAgBA;AACA;AACA;AACA,KA9CA;AAgDA,eAhDA,uBAgDA,YAhDA,EAiDA;AACA;AACA;;AAEA,sGACA;AACA;AACA;AACA;;AAEA;AACA,KA5DA;AA8DA,gBA9DA,wBA8DA,YA9DA,EA+DA;AAAA;;AACA,oCACA;AACA,yKACA;AACA;AACA;;AAEA,qGACA,mCADA,EAEA;AACA,2DADA;AAEA;AAFA,SAFA;AAQA,0DACA;AACA;AACA;AACA;;AAEA,qDACA;AAAA;AAAA;AAAA;;AAAA;AACA,mLACA;AAAA,oBADA,IACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AANA;AAAA;AAAA;;AAAA;AAQA,kMACA;AAAA,wBADA,KACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA;AACA,0BADA;AAEA,0BAFA;AAGA,4BAHA;AAIA;AAJA;AAMA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA,SA9BA;AA+BA,OA9CA,MAgDA;AACA;AACA;AACA,KAnHA;AAqHA,0BArHA,kCAqHA,IArHA,EAsHA;AACA,oCACA;AACA;AACA,OAHA,MAKA;AACA;AACA;AAEA;AACA;AACA,KAlIA;AAoIA,SApIA,mBAqIA;AACA;;AAEA,8CACA;AACA;AACA;AACA,KA5IA;AA8IA,WA9IA,qBA+IA;AACA;;AAEA,+EACA;AACA;AACA;AACA,KAtJA;AAwJA;AACA,sBAzJA,8BAyJA,KAzJA,EA0JA;AAAA;;AACA,6BACA;AACA;AACA,OAHA,EAGA,GAHA;AAIA;AA/JA;AA5DA,G;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oBAAoB,wCAAwC;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,kBAAkB,+CAA+C;AACjE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,0CAA0C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA;AACA,sCAAsC;AACtC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AAAyF;AAC3B;AACL;;;AAGzD;AACsG;AACtG,gBAAgB,2GAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAkM,CAAgB,8OAAG,EAAC,C;;;;;;;;;;;;ACAtN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"ceres-39.js","sourcesContent":["<template>\n    <div class=\"search-box-inner w-100\">\n        <div class=\"search-box-shadow-frame d-flex flex-grow-1 position-relative\">\n            <input type=\"search\" class=\"search-input flex-grow-1 px-3 py-2\" ref=\"searchInput\" @input=\"autocomplete($event.target.value)\"\n                @keyup.enter=\"prepareSearch()\" @keyup.down=\"keydown()\" @keyup.up=\"keyup()\"\n                @focus=\"isSearchFocused = true\" @blur=\"setIsSearchFocused(false)\"\n                :autofocus=\"isShopBuilder\">\n\n            <button class=\"search-submit px-3\" type=\"submit\" @click=\"search()\">\n                <i class=\"fa fa-search\"></i>\n            </button>\n\n            <div class=\"autocomplete-suggestions\" v-if=\"isSearchFocused && autocompleteResult.length\">\n                <div class=\"autocomplete-suggestion\" v-for=\"(item, index) in autocompleteResult\" :key=\"index\" @mousedown=\"selectAutocompleteItem(item)\" :class=\"{ 'autocomplete-selected': selectedAutocompleteIndex === index }\">\n                    <div class=\"autocomplete-image-container\" v-if=\"showItemImages\">\n                        <img class=\"autocomplete-image\" :src=\"item.img\">\n                    </div>\n                    <div class=\"autocomplete-item-name\" v-html=\"item.displayName\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport UrlService from \"../../services/UrlService\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\nimport { pathnameEquals } from \"../../helper/url\";\nimport ApiService from \"../../services/ApiService\";\n\nexport default {\n\n    name: \"item-search\",\n\n    props: {\n        showItemImages:\n        {\n            type: Boolean,\n            default: false\n        },\n        forwardToSingleItem:\n        {\n            type: Boolean,\n            default: App.config.search.forwardToSingleItem\n        }\n    },\n\n    data()\n    {\n        return {\n            autocompleteRequest: null,\n            autocompleteResult: [],\n            selectedAutocompleteIndex: -1,\n            isSearchFocused: false\n        };\n    },\n\n    computed:\n    {\n        selectedAutocompleteItem()\n        {\n            const selectedAutocompleteItem = this.autocompleteResult[this.selectedAutocompleteIndex];\n\n            if (this.selectedAutocompleteIndex < 0 || !selectedAutocompleteItem)\n            {\n                return null;\n            }\n\n            return selectedAutocompleteItem;\n        },\n\n        isShopBuilder()\n        {\n            return App.isShopBuilder;\n        }\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            const urlParams = UrlService.getUrlParams(document.location.search);\n\n            this.$store.commit(\"setItemListSearchString\", urlParams.query);\n\n            this.$refs.searchInput.value = !isNullOrUndefined(urlParams.query) ? urlParams.query : \"\";\n        });\n    },\n\n    methods:\n    {\n        prepareSearch()\n        {\n            if (this.selectedAutocompleteItem)\n            {\n                if (this.forwardToSingleItem)\n                {\n                    window.open(this.selectedAutocompleteItem.url, \"_self\", false);\n                }\n                else\n                {\n                    this.$refs.searchInput.value = this.selectedAutocompleteItem.name;\n                    this.$store.commit(\"setItemListSearchString\", this.$refs.searchInput.value);\n\n                    this.search();\n                }\n            }\n            else\n            {\n                this.search();\n            }\n\n            $(\"#searchBox\").collapse(\"hide\");\n        },\n\n        search()\n        {\n            if (this.$refs.searchInput.value.length)\n            {\n                if (pathnameEquals(App.urls.search))\n                {\n                    this.updateTitle(this.$refs.searchInput.value);\n                    this.$store.dispatch(\"searchItems\", this.$refs.searchInput.value);\n\n                    this.selectedAutocompleteIndex = -1;\n                    this.autocompleteResult = [];\n                }\n                else\n                {\n                    window.open(`${App.urls.search}?query=${this.$refs.searchInput.value}`, \"_self\", false);\n                }\n            }\n            else\n            {\n                this.preventSearch = false;\n            }\n        },\n\n        updateTitle(searchString)\n        {\n            const searchPageTitle = document.querySelector(\"#searchPageTitle\");\n            const title = this.$translate(\"Ceres::Template.itemSearchResults\") + \" \" + searchString;\n\n            if (!isNullOrUndefined(searchPageTitle))\n            {\n                searchPageTitle.innerHTML = \"\";\n                searchPageTitle.appendChild(document.createTextNode(title));\n            }\n\n            document.title = `${title} | ${this.$translate(\"Ceres::Template.headerCompanyName\")}`;\n        },\n\n        autocomplete(searchString)\n        {\n            if (searchString.length >= 2)\n            {\n                if (!isNullOrUndefined(this.autocompleteRequest) && typeof this.autocompleteRequest.abort === \"function\")\n                {\n                    this.autocompleteRequest.abort();\n                }\n\n                this.autocompleteRequest = ApiService.get(\n                    \"/rest/io/item/search/autocomplete\",\n                    {\n                        template: \"Ceres::ItemList.Components.ItemSearch\",\n                        query: searchString\n                    }\n                );\n\n                this.autocompleteRequest.done(response =>\n                {\n                    this.autocompleteRequest = null;\n                    this.autocompleteResult = [];\n                    this.selectedAutocompleteIndex = -1;\n\n                    if (response && response.documents.length)\n                    {\n                        for (const item of response.documents)\n                        {\n                            const images = this.$options.filters.itemImages(item.data.images, \"urlPreview\");\n                            const img = this.$options.filters.itemImage(images);\n                            const url = this.$options.filters.itemURL(item.data);\n                            const name = this.$options.filters.itemName(item.data);\n\n                            let displayName = name;\n\n                            for (const split of searchString.split(\" \"))\n                            {\n                                displayName = displayName.replace(split, `<strong>${split}</strong>`);\n                            }\n\n                            this.autocompleteResult.push({\n                                img,\n                                url,\n                                name,\n                                displayName\n                            });\n                        }\n                    }\n                });\n            }\n            else\n            {\n                this.autocompleteResult = [];\n            }\n        },\n\n        selectAutocompleteItem(item)\n        {\n            if (this.forwardToSingleItem)\n            {\n                window.open(item.url, \"_self\", false);\n            }\n            else\n            {\n                this.$refs.searchInput.value = item.name;\n                this.$store.commit(\"setItemListSearchString\", this.$refs.searchInput.value);\n\n                this.search();\n            }\n        },\n\n        keyup()\n        {\n            this.selectedAutocompleteIndex--;\n\n            if (this.selectedAutocompleteIndex < 0)\n            {\n                this.selectedAutocompleteIndex = 0;\n            }\n        },\n\n        keydown()\n        {\n            this.selectedAutocompleteIndex++;\n\n            if (this.selectedAutocompleteIndex > this.autocompleteResult.length - 1)\n            {\n                this.selectedAutocompleteIndex = this.autocompleteResult.length - 1;\n            }\n        },\n\n        // hide autocomplete after 100ms to make clicking on it possible\n        setIsSearchFocused(value)\n        {\n            setTimeout(() =>\n            {\n                this.isSearchFocused = !!value;\n            }, 100);\n        }\n    }\n}\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"search-box-inner w-100\" }, [\n    _c(\n      \"div\",\n      {\n        staticClass:\n          \"search-box-shadow-frame d-flex flex-grow-1 position-relative\"\n      },\n      [\n        _c(\"input\", {\n          ref: \"searchInput\",\n          staticClass: \"search-input flex-grow-1 px-3 py-2\",\n          attrs: { type: \"search\", autofocus: _vm.isShopBuilder },\n          on: {\n            input: function($event) {\n              return _vm.autocomplete($event.target.value)\n            },\n            keyup: [\n              function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                return _vm.prepareSearch()\n              },\n              function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"down\", 40, $event.key, [\n                    \"Down\",\n                    \"ArrowDown\"\n                  ])\n                ) {\n                  return null\n                }\n                return _vm.keydown()\n              },\n              function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"up\", 38, $event.key, [\n                    \"Up\",\n                    \"ArrowUp\"\n                  ])\n                ) {\n                  return null\n                }\n                return _vm.keyup()\n              }\n            ],\n            focus: function($event) {\n              _vm.isSearchFocused = true\n            },\n            blur: function($event) {\n              return _vm.setIsSearchFocused(false)\n            }\n          }\n        }),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          {\n            staticClass: \"search-submit px-3\",\n            attrs: { type: \"submit\" },\n            on: {\n              click: function($event) {\n                return _vm.search()\n              }\n            }\n          },\n          [_c(\"i\", { staticClass: \"fa fa-search\" })]\n        ),\n        _vm._v(\" \"),\n        _vm.isSearchFocused && _vm.autocompleteResult.length\n          ? _c(\n              \"div\",\n              { staticClass: \"autocomplete-suggestions\" },\n              _vm._l(_vm.autocompleteResult, function(item, index) {\n                return _c(\n                  \"div\",\n                  {\n                    key: index,\n                    staticClass: \"autocomplete-suggestion\",\n                    class: {\n                      \"autocomplete-selected\":\n                        _vm.selectedAutocompleteIndex === index\n                    },\n                    on: {\n                      mousedown: function($event) {\n                        return _vm.selectAutocompleteItem(item)\n                      }\n                    }\n                  },\n                  [\n                    _vm.showItemImages\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"autocomplete-image-container\" },\n                          [\n                            _c(\"img\", {\n                              staticClass: \"autocomplete-image\",\n                              attrs: { src: item.img }\n                            })\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"div\", {\n                      staticClass: \"autocomplete-item-name\",\n                      domProps: { innerHTML: _vm._s(item.displayName) }\n                    })\n                  ]\n                )\n              }),\n              0\n            )\n          : _vm._e()\n      ]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ItemSearch.vue?vue&type=template&id=010b1df7&\"\nimport script from \"./ItemSearch.vue?vue&type=script&lang=js&\"\nexport * from \"./ItemSearch.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('010b1df7')) {\n      api.createRecord('010b1df7', component.options)\n    } else {\n      api.reload('010b1df7', component.options)\n    }\n    module.hot.accept(\"./ItemSearch.vue?vue&type=template&id=010b1df7&\", function () {\n      api.rerender('010b1df7', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/itemList/ItemSearch.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemSearch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemSearch.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ItemSearch.vue?vue&type=template&id=010b1df7&\""],"sourceRoot":""}