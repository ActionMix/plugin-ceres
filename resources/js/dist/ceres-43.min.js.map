{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?ca6e","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?b8a1","webpack:///resources/js/src/app/components/pageDesign/Notifications.vue","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","_vm","_h","$createElement","_c","_self","staticClass","_l","filteredNotifications","notification","key","id","class","attrs","role","type","on","click","$event","close","_v","showErrorCode","_s","code","_e","domProps","innerHTML","message","stackTrace","trace","index","_withStripped","component","__file"],"mappings":"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","file":"ceres-43.min.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"notification-wrapper\" },\n    _vm._l(_vm.filteredNotifications, function(notification) {\n      return _c(\n        \"div\",\n        {\n          key: notification.id,\n          class:\n            \"alert alert-dismissible fade in show alert-\" +\n            notification.context,\n          attrs: { role: \"alert\" }\n        },\n        [\n          _c(\n            \"button\",\n            {\n              staticClass: \"close\",\n              attrs: { type: \"button\", \"aria-label\": \"Close\" },\n              on: {\n                click: function($event) {\n                  return notification.close()\n                }\n              }\n            },\n            [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"Ã—\")])]\n          ),\n          _vm._v(\" \"),\n          _vm.showErrorCode\n            ? _c(\"strong\", [_vm._v(_vm._s(notification.code))])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { domProps: { innerHTML: _vm._s(notification.message) } }),\n          _vm._v(\" \"),\n          _vm._l(notification.stackTrace, function(trace, index) {\n            return _c(\"p\", { key: index, staticClass: \"small\" }, [\n              _vm._v(\"\\n            \" + _vm._s(trace.message) + \"\\n        \")\n            ])\n          })\n        ],\n        2\n      )\n    }),\n    0\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"","<template>\n    <div class=\"notification-wrapper\">\n        <div v-for=\"notification in filteredNotifications\"\n            :key=\"notification.id\"\n            :class=\"'alert alert-dismissible fade in show alert-' + notification.context\"\n            role=\"alert\"\n        >\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"notification.close()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n\n            <strong v-if=\"showErrorCode\">{{ notification.code }}</strong>\n\n            <div v-html=\"notification.message\"></div>\n\n            <p class=\"small\" v-for=\"(trace, index) in notification.stackTrace\" :key=\"index\">\n                {{ trace.message }}\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport NotificationService from \"../../services/NotificationService\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\nimport Vue from \"vue\";\n\nexport default {\n\n    props: {\n        initialNotifications: Object\n    },\n\n    data()\n    {\n        return {\n            notifications: []\n        };\n    },\n\n    computed: {\n        showErrorCode()\n        {\n            const logData = this.$ceres.config.log.data;\n\n            return logData.includes(\"show_error_code\") || logData.includes(\"all\");\n        },\n\n        filteredNotifications()\n        {\n            return this.notifications.filter(notification => !!notification.message);\n        }\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            NotificationService.listen(\n                notifications =>\n                {\n                    Vue.set(this, \"notifications\", notifications);\n                });\n\n            this.showInitialNotifications();\n        });\n    },\n\n    methods : {\n        /**\n         * Dissmiss the notification\n         * @param notification\n         */\n        dismiss(notification)\n        {\n            NotificationService.getNotifications().remove(notification);\n        },\n\n        /**\n         * show initial notifications from server\n         */\n        showInitialNotifications()\n        {\n            for (const type in this.initialNotifications)\n            {\n                const notification = this.initialNotifications[type];\n\n                if (isNullOrUndefined(notification))\n                {\n                    continue;\n                }\n\n                // type cannot be undefined\n                if (!isNullOrUndefined(NotificationService[type]) && typeof NotificationService[type] === \"function\")\n                {\n                    NotificationService[type](notification);\n                }\n                else\n                {\n                    // unkown type\n                    NotificationService.log(notification);\n                }\n            }\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./Notifications.vue?vue&type=template&id=e0b367d0&\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js&\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e0b367d0')) {\n      api.createRecord('e0b367d0', component.options)\n    } else {\n      api.reload('e0b367d0', component.options)\n    }\n    module.hot.accept(\"./Notifications.vue?vue&type=template&id=e0b367d0&\", function () {\n      api.rerender('e0b367d0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/pageDesign/Notifications.vue\"\nexport default component.exports"],"sourceRoot":""}