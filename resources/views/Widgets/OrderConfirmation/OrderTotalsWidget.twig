{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{% set customClass = widget.settings.customClass.mobile %}
{% set spacingSettings = widget.settings.spacing %}
{% set inlineSpacings = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{% set spacingClasses = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}

{% set visibleFields = widget.settings.visibleFields.mobile | default([
    "orderValueNet", "orderValueGross", "rebate", "shippingCostsNet", "shippingCostsGross", "totalSumNet", "promotionCoupon", "vats", "totalSumGross", "salesCoupon", "openAmount"
]) %}

{{ Twig.set("visibleFields", visibleFields | json_encode) }}

{{ Twig.import("Totals", "Ceres::Checkout.Macros.OrderTotals") }}

{{ Twig.if("visibleFields | length > 0") }}
    <div class="widget widget-order-totals card
        {% if customClass | length > 0 %}{{ customClass }}{% endif %}">
        <div class="widget-inner {% if spacingClasses | length > 0 %}{{ spacingClasses }}{% endif %}"{% if inlineSpacings | length > 0 %} style="{{ inlineSpacings }}"{% endif %}>
            {{ Twig.print("Totals.forOrder(data, visibleFields)") }}
        </div>
    </div>
{{ Twig.endif() }}
