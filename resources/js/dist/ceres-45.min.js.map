{"version":3,"sources":["webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?ca6e","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue?b8a1","webpack:///resources/js/src/app/components/pageDesign/Notifications.vue","webpack:///./resources/js/src/app/components/pageDesign/Notifications.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","filteredNotifications","notification","key","id","class","context","attrs","role","type","on","click","$event","close","_v","showErrorCode","_s","code","_e","domProps","innerHTML","message","stackTrace","trace","index","_withStripped","component","options","__file"],"mappings":"kGAAA,IAAIA,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACTC,EAAKJ,EAAIK,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CAAEE,YAAa,wBACfN,EAAIO,GAAGP,EAAIQ,uBAAuB,SAASC,GACzC,OAAOL,EACL,MACA,CACEM,IAAKD,EAAaE,GAClBC,MACE,8CACAH,EAAaI,QACfC,MAAO,CAAEC,KAAM,UAEjB,CACEX,EACE,SACA,CACEE,YAAa,QACbQ,MAAO,CAAEE,KAAM,SAAU,aAAc,SACvCC,GAAI,CACFC,MAAO,SAASC,GACd,OAAOV,EAAaW,WAI1B,CAAChB,EAAG,OAAQ,CAAEU,MAAO,CAAE,cAAe,SAAY,CAACd,EAAIqB,GAAG,SAE5DrB,EAAIqB,GAAG,KACPrB,EAAIsB,cACAlB,EAAG,SAAU,CAACJ,EAAIqB,GAAGrB,EAAIuB,GAAGd,EAAae,SACzCxB,EAAIyB,KACRzB,EAAIqB,GAAG,KACPjB,EAAG,MAAO,CAAEsB,SAAU,CAAEC,UAAW3B,EAAIuB,GAAGd,EAAamB,YACvD5B,EAAIqB,GAAG,KACPrB,EAAIO,GAAGE,EAAaoB,YAAY,SAASC,EAAOC,GAC9C,OAAO3B,EAAG,IAAK,CAAEM,IAAKqB,EAAOzB,YAAa,SAAW,CACnDN,EAAIqB,GAAG,iBAAmBrB,EAAIuB,GAAGO,EAAMF,SAAW,oBAIxD,MAGJ,IAIJ7B,EAAOiC,eAAgB,E,oDCnD8L,EC2BrN,CAEE,MAAF,CACI,qBAAJ,QAGE,KANF,WAQI,MAAJ,CACM,cAAN,KAIE,SAAF,CACI,cADJ,WAGM,IAAN,8BAEM,OAAN,kDAGI,sBARJ,WAUM,OAAN,uCAAQ,QAAR,eAIE,QA3BF,WA4BI,IAAJ,OACI,KAAJ,sBAEM,EAAN,gBACA,YAEQ,EAAR,8BAGM,EAAN,+BAIE,QAAF,CAKI,QALJ,SAKA,GAEM,EAAN,sCAMI,yBAbJ,WAeM,IAAN,mCACA,CACQ,IAAR,+BAEA,iBAMA,2DAOU,EAAV,eALU,EAAV,mB,QCxFIC,EAAY,YACd,EACAlC,EHyCoB,IGvCpB,EACA,KACA,KACA,MAuBFkC,EAAUC,QAAQC,OAAS,+DACZ,UAAAF,E","file":"ceres-45.min.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"notification-wrapper\" },\n    _vm._l(_vm.filteredNotifications, function(notification) {\n      return _c(\n        \"div\",\n        {\n          key: notification.id,\n          class:\n            \"alert alert-dismissible fade in show alert-\" +\n            notification.context,\n          attrs: { role: \"alert\" }\n        },\n        [\n          _c(\n            \"button\",\n            {\n              staticClass: \"close\",\n              attrs: { type: \"button\", \"aria-label\": \"Close\" },\n              on: {\n                click: function($event) {\n                  return notification.close()\n                }\n              }\n            },\n            [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"Ã—\")])]\n          ),\n          _vm._v(\" \"),\n          _vm.showErrorCode\n            ? _c(\"strong\", [_vm._v(_vm._s(notification.code))])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { domProps: { innerHTML: _vm._s(notification.message) } }),\n          _vm._v(\" \"),\n          _vm._l(notification.stackTrace, function(trace, index) {\n            return _c(\"p\", { key: index, staticClass: \"small\" }, [\n              _vm._v(\"\\n            \" + _vm._s(trace.message) + \"\\n        \")\n            ])\n          })\n        ],\n        2\n      )\n    }),\n    0\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"","<template>\n    <div class=\"notification-wrapper\">\n        <div v-for=\"notification in filteredNotifications\"\n            :key=\"notification.id\"\n            :class=\"'alert alert-dismissible fade in show alert-' + notification.context\"\n            role=\"alert\"\n        >\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"notification.close()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n\n            <strong v-if=\"showErrorCode\">{{ notification.code }}</strong>\n\n            <div v-html=\"notification.message\"></div>\n\n            <p class=\"small\" v-for=\"(trace, index) in notification.stackTrace\" :key=\"index\">\n                {{ trace.message }}\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport NotificationService from \"../../services/NotificationService\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\nimport Vue from \"vue\";\n\nexport default {\n\n    props: {\n        initialNotifications: Object\n    },\n\n    data()\n    {\n        return {\n            notifications: []\n        };\n    },\n\n    computed: {\n        showErrorCode()\n        {\n            const logData = this.$ceres.config.log.data;\n\n            return logData.includes(\"show_error_code\") || logData.includes(\"all\");\n        },\n\n        filteredNotifications()\n        {\n            return this.notifications.filter(notification => !!notification.message);\n        }\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            NotificationService.listen(\n                notifications =>\n                {\n                    Vue.set(this, \"notifications\", notifications);\n                });\n\n            this.showInitialNotifications();\n        });\n    },\n\n    methods : {\n        /**\n         * Dissmiss the notification\n         * @param notification\n         */\n        dismiss(notification)\n        {\n            NotificationService.getNotifications().remove(notification);\n        },\n\n        /**\n         * show initial notifications from server\n         */\n        showInitialNotifications()\n        {\n            for (const type in this.initialNotifications)\n            {\n                const notification = this.initialNotifications[type];\n\n                if (isNullOrUndefined(notification))\n                {\n                    continue;\n                }\n\n                // type cannot be undefined\n                if (!isNullOrUndefined(NotificationService[type]) && typeof NotificationService[type] === \"function\")\n                {\n                    NotificationService[type](notification);\n                }\n                else\n                {\n                    // unkown type\n                    NotificationService.log(notification);\n                }\n            }\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./Notifications.vue?vue&type=template&id=e0b367d0&\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js&\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/workspace/localsystem/plugins/inbox/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e0b367d0')) {\n      api.createRecord('e0b367d0', component.options)\n    } else {\n      api.reload('e0b367d0', component.options)\n    }\n    module.hot.accept(\"./Notifications.vue?vue&type=template&id=e0b367d0&\", function () {\n      api.rerender('e0b367d0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/pageDesign/Notifications.vue\"\nexport default component.exports"],"sourceRoot":""}